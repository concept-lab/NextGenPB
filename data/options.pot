# ===================================
# Poisson-Boltzmann Solver Configuration
# ===================================

######################################
# Input Settings
######################################
[input]


# File type used for molecular input:
#   - "pqr" (default): includes atomic positions, charges, and radii in one file
#   - "pdb": standard PDB format; must be accompanied by separate radius and charge files
filetype = pqr

# Path to the main input structure file:
#   - If filetype = pqr, this must be a .pqr file.
#   - If filetype = pdb, this must be a .pdb file.
filename = ../../data/1CCM.pqr

# Path to atomic radii file:
#   - Only used if filetype = pdb
#   - Should contain radii for all atoms in the PDB file
radius_file = radius.siz

# Path to atomic charges file:
#   - Only used if filetype = pdb
#   - Should contain charges for all atoms in the PDB file
charge_file = charge.crg

# Write the PQR file back to disk after processing:
#   - 0: Do not write the file
#   - 1: Write processed structure to disk
write_pqr = 0

# Output filename used if write_pqr = 1
name_pqr = output.pqr

######################################
# Mesh Settings
######################################
[mesh]

# Grid generation mode:
# 0 = derefined cubic mesh, uses perfil1 and perfil2 to control grid spacing, scaled by 'scale'
# 1 = uniform cubic mesh defined by perfil1
# 2 = manually defined bounding box (see x1–z2)
# 3 = focused mesh centered at (cx_foc, cy_foc, cz_foc) with local refinement
mesh_shape = 0

# Grid spacing control:
# perfil1 controls base resolution (smaller = finer grid)
# perfil2 is used in derefined zones (used only if mesh_shape = 0 or mesh_shape = 1 && refine_box = 1)
# scale = 1/(grid_size) (used only if mesh_shape = 0,3)
perfil1 = 0.8
perfil2 = 0.5
scale   = 2.0

# Used only if mesh_shape = 3 (focusing mesh):
# These define the center and number of grid intervals in the focused region
cx_foc  = 0       # X-center of focusing region
cy_foc  = 0       # Y-center of focusing region
cz_foc  = 0       # Z-center of focusing region
n_grid  = 10      # Number of 1/scale-width intervals in focused zone

# Used for mesh_shape = 1 or 2
unilevel  = 6     # Uniform refinement level across the mesh (2^unilevel elements per side)
outlevel  = 1     # Minimum refinement level outside the refine box

# Optional: displace mesh center randomly within half grid size (used in stochastic sampling)
rand_center = 0   # 1 = enable random center displacement, 0 = disable (only for mesh_shape=0,1)

# Only for mesh_shape = 2 (manual bounding box):
# Define the physical domain directly
x1 = -16
x2 =  16
y1 = -16
y2 =  16
z1 = -16
z2 =  16

# Refinement box (only active when mesh_shape = 1 or 2 and refine_box = 1)
# Refines the mesh within a subregion
refine_box = 0          # 1 = enable inner refinement box, 0 = disable
refine_x1 = -4.0
refine_x2 =  4.0
refine_y1 = -4.0
refine_y2 =  4.0
refine_z1 = -4.0
refine_z2 =  4.0

[../]


######################################
# Electrostatic Model Settings
######################################
[model]

[model]

linearized = 1          # 1 = use linearized Poisson–Boltzmann equation
bc_type = 1             # Boundary conditions:
                        # 0 = Neumann (zero normal derivative)
                        # 1 = Dirichlet (fixed potential)
                        # 2 = Coulombic (analytical behavior at boundary)

molecular_dielectric_constant = 2      # Dielectric constant inside the molecule
solvent_dielectric_constant   = 80     # Dielectric constant of the solvent (e.g., water)
ionic_strength                = 0.145  # Ionic strength (mol/L)
T                             = 298.15 # Temperature in Kelvin

# Energy calculation options:
# 0 = no energy
# 1 = polarization energy 
# 2 = polarization + ionic solvation energy
calc_energy = 2
calc_coulombic = 1    # 0 = No calculation of Coulombic energy

# Output options:
atoms_write   = 0     # 1 = write potential at atom centers, 0 = don't
map_type      = vtu   # Output format: 'vtu' (for ParaView, vtk binary), 'oct' (Octbin internal format)
potential_map = 0     # 1 = write full potential map to file
eps_map       = 0     # 1 = write dielectric (epsilon) map to file
surf_write    = 0     # 1 = write potential on the molecular surface

[../]


######################################
# Surface Definition (NanoShaper)
######################################
[surface]

# Surface type used to define dielectric boundaries:
# 0 = Solvent Excluded Surface (SES)
# 1 = Skin surface
# 2 = Blobby surface
surface_type = 0

# Surface shape parameter:
# - For SES, this is the probe radius (default ~1.4 Å for water)
# - For skin/blobby, this controls smoothness/blobbyness(-1.5)
surface_parameter = 1.4

# Stern layer options:
stern_layer_surf      = 0     # 1 = include Stern layer (fixed ion-free shell), 0 = no Stern layer
stern_layer_thickness = 2.0   # Thickness of Stern layer (in Å)

# Performance:
number_of_threads = 1         # Number of CPU threads for NanoShaper

[../]


######################################
# Solver and Algorithm Settings
######################################
[algorithm]

# Linear solver backend:
# 'mumps' = direct solver (stable but memory intensive)
# 'lis'   = iterative solver (recommended for large problems)
linear_solver = lis

# Solver options string (used by LIS library):
# These control the solver type, preconditioner, tolerances, and print level
#
# -i           = solver type (cg, cgs, bicgstab, etc.)
# -p           = preconditioner (ilu, ssor, jacobi, etc.)
# -tol         = solver convergence tolerance
# -print       = output verbosity (0 = silent, 1 = final, 2 = each iteration)
# -conv_cond   = convergence condition type (default 2 = residual norm)
# -tol_w       = warning tolerance
#
# This example uses SSOR preconditioning with CGS solver and strict tolerance
solver_options = -p\ ssor\ -ssor_omega\ 0.51\ -i\ cgs\ -tol\ 1.e-6\ -print\ 2\ -conv_cond\ 2\ -tol_w\ 0

# Alternative solver setup (commented out):
# solver_options = -i\ cg\ -p\ ilu\ -ilu_fill\ [0]\ -tol\ 1.e-6\ -print\ 2\ -conv_cond\ 2\ -tol_w\ 0

[../]