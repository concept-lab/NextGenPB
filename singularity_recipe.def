Bootstrap: docker
From: rockylinux:9

%labels
    maintainer "vincenzo.diflorio@iit.it"

%post
    echo "Installing NextGenPB 0.0"
    dnf upgrade -y
    dnf --enablerepo crb install -y \
        gcc gcc-c++ gcc-gfortran make python3 texinfo nano\
        gawk procps wget openssh-clients p11-kit diffutils which \
        git rsync zip unzip bzip2 glibc-static patch xz perl-locale \
        perl-Unicode-Normalize \
        boost boost-devel \
        mpi openmpi zlib-devel json-c  jansson jansson-devel\
        gmp gmp-devel mpfr mpfr-devel \
        openssl-devel tar
    dnf clean all
    cd  /opt

    git clone https://github.com/carlodefalco/mk.git
    cd /opt/mk
    git checkout nextgenPB

    export CFLAGS="-O3 -mtune=native"
    export CXXFLAGS=$CFLAGS
    export FCFLAGS=$CFLAGS

    ### CMAKE (at least 3.1 for TBB) ###
    cd /opt/
    wget https://cmake.org/files/v3.19/cmake-3.19.0-Linux-x86_64.tar.gz
    tar -xzf cmake-3.19.0-Linux-x86_64.tar.gz
    rm cmake-3.19.0-Linux-x86_64.tar.gz

    ### TBB ###
    cd /opt/
    wget https://github.com/oneapi-src/oneTBB/archive/v2021.4.0.tar.gz
    tar -xvzf v2021.4.0.tar.gz
    mv oneTBB-2021.4.0 tbb
    cd /opt/tbb
    /opt/cmake-3.19.0-Linux-x86_64/bin/cmake \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX=/opt/tbb/lib \
        -DTBB_TEST=OFF .
    make -j4
    make install
    cd /opt/
    rm v2021.4.0.tar.gz

    ### NanoShaper ###
    cd /opt/
    git clone https://gitlab.iit.it/SDecherchi/nanoshaper.git

    export CGALVER="5.6.1"
    export CGALFILE="CGAL-5.6.1.tar.xz"
    export CGALDIR="CGAL-5.6.1"
    cd /opt
    wget https://github.com/CGAL/cgal/releases/download/v$CGALVER/$CGALFILE
    tar -xvf ${CGALFILE}
    rm ${CGALFILE}

    # Patching
    cp /opt/mk/pkgs/nanoshaper/wp* /opt/${CGALDIR}
    cd /opt/${CGALDIR}
    [ -r wp2.diff ] && patch -p0 -i wp2.diff
    [ -r wp3.diff ] && patch -p0 -i wp3.diff

    # Install CGAL
    mkdir build
    cd /opt/${CGALDIR}/build
    /opt/cmake-3.19.0-Linux-x86_64/bin/cmake .. \
        -DCMAKE_INSTALL_PREFIX=/opt/${CGALDIR}/ \
        -DWITH_examples=false \
        -DWITH_CGAL_ImageIO=false \
        -DCMAKE_BUILD_TYPE=Release
    make -j4 install

    ### NanoShaper Build ###
    cd /opt/nanoshaper/
    git checkout Nanoshaper_devel_TBB
    cp CMakeLists_so.txt CMakeLists.txt
    cd /opt/nanoshaper/build_lib
    /opt/cmake-3.19.0-Linux-x86_64/bin/cmake .. \
      -DCGAL_DIR=/opt/${CGALDIR}/lib64/cmake/CGAL \
      -DTBB_DIR=/opt/tbb/lib/lib64/cmake/TBB \
      -DCMAKE_BUILD_TYPE="Release"
    make clean
    make -j4


    ###BIMPP LIBRARY###
    echo "export PATH=/usr/lib64/openmpi/bin:$PATH" >> ~/.bashrc
    echo "export LD_LIBRARY_PATH=/usr/lib64/openmpi/lib:$LD_LIBRARY_PATH" >> ~/.bashrc
    export PATH=/usr/lib64/openmpi/bin:$PATH
    export LD_LIBRARY_PATH=/usr/lib64/openmpi/lib:$LD_LIBRARY_PATH

    dnf install -y epel-release
    dnf --enablerepo crb install -y glpk-utils bison \
         openblas-devel autoconf automake libtool scotch scotch-devel \
         redhat-rpm-config libasan bzip2 bzip2-devel

    ###MUMPS###
    dnf install -y MUMPS MUMPS-devel

    ###OCTAVE###
    dnf --enablerepo crb install -y qhull-devel arpack-devel octave octave-devel

    ##LIS###
    cd /opt/
    export pkgname=lis
    export pkgver=2.1.3
    export archive=$pkgname-$pkgver.zip
    wget https://www.ssisc.org/lis/dl/$archive
    unzip $archive
    cd /opt/$pkgname-$pkgver
    chmod 755 configure config/install-sh
    ./configure --prefix="/opt/$pkgname" \
                --enable-mpi \
                --enable-shared \
                --disable-static
    make -j4
    make -j4 install
    cd /opt/
    rm -rf $pkgname-$pkgver $archive


    ###P4EST###
    export pkgname=p4est
    export pkgver=2.8.6
    export archive=$pkgname-$pkgver.tar.gz
    wget https://p4est.github.io/release/$archive
    tar -xzf $archive
    rm -rf $archive
    cd /opt/$pkgname-$pkgver
    export CC=mpicc
    export CXX=mpic++
    mkdir /opt/$pkgname-$pkgver/build
    cd /opt/$pkgname-$pkgver/build
    ../configure --prefix="/opt/$pkgname" \
                --enable-mpi \
                --enable-shared \
                --disable-static \
                --disable-vtk-binary \
                --without-blas \
                CPPFLAGS="-I/usr/include/openmpi-x86_64/"
    make -j4
    make install
    cd /opt/
    rm -rf $pkgname-$pkgver

    ###SCALAPACK###
    export pkgname=scalapack
    export pkgver=2.1.0
    export archive=$pkgname-$pkgver.tgz
    wget https://www.netlib.org/$pkgname/$archive
    tar -xf $archive
    rm -rf $archive
    cd /opt/$pkgname-$pkgver
    mkdir build
    cd /opt/$pkgname-$pkgver/build
    export FFLAGS="-std=legacy"
    /opt/cmake-3.19.0-Linux-x86_64/bin/cmake \
          -D CMAKE_INSTALL_PREFIX="/opt/$pkgname" \
          -D CMAKE_SKIP_INSTALL_RPATH=ON \
          -D CMAKE_SKIP_RPATH=ON \
          -D BUILD_TESTING=OFF \
          -D BUILD_SHARED_LIBS=ON \
          -D LAPACK_LIBRARIES=openblas \
          -D BLAS_LIBRARIES=openblas \
          -D MPI_BASE_DIR=/usr/lib64/openmpi \
          ..
    make -j4 VERBOSE=1
    make install
    cd /opt/
    rm -rf /opt/$pkgname-$pkgver


    ###OCTAVE-FILE-IO###
    export pkgname=octave_file_io
    export pkgver=1.0.91
    export archive=v$pkgver.tar.gz
    wget https://github.com/carlodefalco/octave_file_io/archive/refs/tags/$archive
    tar -xf $archive
    rm -rf $archive
    cd /opt/$pkgname-$pkgver
    ./autogen.sh
    mkdir build
    cd /opt/$pkgname-$pkgver/build
    ../configure --prefix="/opt/$pkgname" \
                --with-octave-home=/usr/bin \
                CC=mpicc CXX=mpicxx
    make -j4
    make install
    cd /opt
    rm -rf /opt/$pkgname-$pkgver


    ###NextGenPB###
    mkdir /usr/local/nextgenPB
    git config --global \
  url."https://vdiflorio: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@github.com/".insteadOf \
  "https://github.com/"
    git clone https://github.com/vdiflorio/nextgenPB.git /usr/local/nextgenPB/


    ###BIMPP###
    cd /opt
    export pkgname=bimpp
    export pkgver=patch
    export archive=$pkgname-$pkgver.tar.bz2
    cp /usr/local/nextgenPB/$archive /opt
    tar -xf $archive
    rm -rf $archive
    cd /opt/$pkgname-patch
    mkdir build
    ./autogen.sh
    cd /opt/$pkgname-patch/build
    ../configure --prefix=/opt/bimpp/ \
                CPPFLAGS="-I/usr/include/openmpi-x86_64 -I/usr/include/ -I/usr/include/MUMPS/ -I/opt/p4est/include -DOMPI_SKIP_MPICXX -DHAVE_OCTAVE_44 -DBIM_TIMING" \
                LDFLAGS="-L/usr/lib64 -L/usr/lib64/openmpi/lib -L/lib64" \
                 --with-blas-lapack="-lopenblas"  \
                 --with-octave_file_io-home=/opt/octave_file_io \
                 --with-octave-home=/usr/bin \
                 --with-p4est-home=/opt/p4est \
                 --with-lis-home=/opt/lis \
                 --with-mumps-home=/usr/lib64 \
F77=mpif90 CXX=mpicxx MPICC=mpicc CC=mpicc \
CXXFLAGS="-O3" \
--with-mumps-extra-libs="-L/usr/lib64 -L/lib64 -L/usr/lib64/lib -lscotch -lmpi \
 -lmpi_usempif08 -lmpi_usempi_ignore_tkr -lmpi_mpifh -lmpi -lopenblas  -lgfortran"
    make -j4
    make install
    cd /opt


###NGPB###
    cd /usr/local/nextgenPB
    cp local_settings_docker.mk /usr/local/nextgenPB/src/local_settings.mk
    cd /usr/local/nextgenPB/src
    make clean all

